<?php

	global $wpdb;

	$tabela = $wpdb->prefix."mapas";


	// carrega as variáveis de configuração
	$existe = $wpdb->get_results("SELECT * FROM $tabela WHERE type IN('url-api','selo') ",ARRAY_A);

	for($i = 0; $i < count($existe); $i++){
		switch($existe[$i]['type']){

		case 'url-api':
			global $url_api;	
			$url_api = $existe[$i]['mapas'];
		break;

		case 'selo':
			global $selo;
			$selo = $existe[$i]['mapas'];
		break;
		
		}
	}
	

	

if(isset($_POST['importar'])){

	$hoje = $_POST['dataInicio'];
	$cem_dias = $_POST['dataFinal'];

	$url = "https://".$url_api."/api/event/findByLocation";
	//$url = "https://$url_api/api/event/find";

	$sql_espaco = "SELECT mapas FROM ".$wpdb->prefix."mapas WHERE type = 'space'";
	$esp = $wpdb->get_results($sql_espaco,ARRAY_A);
	//var_dump($esp);
	$espaco_virgula = "";
	for($j = 0 ; $j < count($esp); $j++){
		$espaco_virgula .= $esp[$j]['mapas'].",";
	}


	$data = array(
		"space"=> "IN(".substr($espaco_virgula,0,-1).")",
		//"space"=> "IN(334)",

   		"@from" => $hoje,
		"@to" => $cem_dias,
		"@select" => "id", 
		//"isVerified" => "EQ(TRUE)"
	);

	$get_addr = $url.'?'.http_build_query($data);
	$evento = json_decode(jsonMapas($get_addr));

	echo "Foram encontrados ".count($evento)." resultados.<br><br>";

	$ccsp = mapasConverterObjParaArray($evento);

	// Retorna os eventos de hoje (converter a string date para date e fazer a comparação de datas)
	$hoje = date('Y-m-d');
	$semana = date('w');
	$today = date('y-m-d H:i:s');
	echo "Hoje é $hoje<br>";
	//echo $get_addr;
	$repeat = 0;
	
	
	for($i = 0; $i < count($ccsp); $i++){
		$id = $ccsp[$i]['id'];	
		//echo $id."<br />";	
		
		$insert = insereEvento($id);
		/*
		//verifica se existe o evento na base
		$evento_mapas = mapasWp($id,"mapas","event");
		//echo "var_dump mapas";
		//var_dump($evento_mapas);
		if($evento_mapas == NULL){
			$insert = insereEvento($id);
			$mapas = $wpdb->query("INSERT INTO `".$wpdb->prefix."mapas` (`id`, `wp`, `mapas`, `type`,`edit` ) VALUES (NULL, '".$insert."', '".$id."', 'event', '1');");
			if($mapas == TRUE){
				echo $name." inserido com sucesso.<br />";	
			}else{
				echo "Erro ao inserir o evento $name. (4)<br />";	
			}
				
		}else{
			echo "Há, somente atualize";
			$atualiza = insereEvento($id,$evento_mapas[0]['wp']);// $id = id do mapas, $insert = id do wordpress
			//var_dump($atualiza);
			
		}
		*/

	}
	
	
}

/* Atualiza espaços 

tabelas utilizadas: _mapas, __eo_venuemeta e _terms

INSERT INTO `wp_eo_venuemeta` (`meta_id`, `eo_venue_id`, `meta_key`, `meta_value`) VALUES
(1, 4, '_address', 'Endereço Teste API'), En_Nome_Logradouro, En_Num En_Complemento, En_Bairro, En_Municipio, En_Estado, En_CEP, location
(2, 4, '_city', 'Cidade Teste API'), En_Municipio
(3, 4, '_state', 'Estado Teste API'),  En_Estado
(4, 4, '_postcode', '03404-140'), En_CEP
(5, 4, '_country', 'País Teste API'),
(6, 4, '_lat', '-23.539121'),location
(7, 4, '_lng', '-46.554751'),
(8, 4, '_description', 'Descrição Local Teste API');

_terms
term_id 4
name Local Teste API
slug local-teste-api
term_group 0

_mapas
INSERT INTO `wp_mapas` (`id`, `wp`, `mapas`, `type`, `atualizacao`, `atualizacao_mapas`, `edit`) VALUES (NULL, '', '', '', '', '', '');
*/

if(isset($_POST['espacos'])){
	
	$url_mapas = "https://".$url_api."/api/";
	$url_space = $url_mapas."space/find";
	$data = array(
		"@select" => "id, name,shortDescription,longDescription,updateTimestamp,parent,En_Nome_Logradouro,En_Num, En_Complemento, En_Bairro, En_Municipio, En_Estado, En_CEP, location, terms, seals, createTimestamp",
		"@seals" => $selo
		);

	$loc = mapasChamaAPI($url_space,$data);
	

for($k = 0; $k < count($loc); $k++){

	$id_mapas = $loc[$k]['id'];
	$nome_espaco = $loc[$k]['name'];
	$slug_espaco = postName($nome_espaco);
	$address = $loc[$k]['En_Nome_Logradouro']." ".$loc[$k]['En_Num']." ".$loc[$k]['En_Bairro']. " ".$loc[$k]['En_Complemento'];
	$city = $loc[$k]['En_Municipio'];
	$state = $loc[$k]['En_Estado'];
	$post_code = $loc[$k]['En_CEP'];
	$latitude = $loc[$k]['location']['latitude'];
	$longitude = $loc[$k]['location']['longitude'];
	$descricao = $loc[$k]['longDescription'];
	if($loc[$k]['updateTimestamp']['date'] ==  NULL){
		$date_mapa_update = substr($loc[$k]['createTimestamp']['date'],0,-7);
	}else{
		$date_mapa_update = substr($loc[$k]['updateTimestamp']['date'],0,-7);
		
	}
	
	//verifica se o espaço existe na tabela wp_mapas
	$ex = $wpdb->get_results("SELECT * FROM ".$wpdb->prefix."mapas WHERE mapas = '$id_mapas' AND type = 'space'",ARRAY_A);
	
	if($ex == TRUE){
		// Verifica se as datas de atualização são iguais
		if($data_mapa_update != $ex[0]['atualizacao_mapas']){
	
		//Atualiza
		
			$idterm = $ex[0]['wp'];
			
			//_terms
			$query = "UPDATE `".$wpdb->prefix."terms` SET `name` = '$nome_espaco', `slug` = '$slug_espaco' WHERE `wp_terms`.`term_id` = $idterm";
			$update = $wpdb->query($query);
			if($update == TRUE){
				echo "Espaço <b>$nome_espaco</b> atualizado com sucesso.<br >";	
			}else{
				echo "Erro ao atualizar o espaço <b>$nome_espaco.</b><br />";	
			}
			
			// eo_venuemeta
			// as referências
			$sql_apaga = "DELETE FROM ".$wpdb->prefix."eo_venuemeta WHERE 'eo_venue_id' = '$idterm'";
			
			
			$sql_insere =  "INSERT INTO `wp_eo_venuemeta` (`eo_venue_id`, `meta_key`, `meta_value`) VALUES
			( $idterm , '_address', '$address'),
			( $idterm , '_city', '$city'),
			( $idterm , '_state', '$state'),
			( $idterm , '_postcode', '$post_code'),
			( $idterm , '_country', 'Brasil'),
			( $idterm , '_lat', '$latitude'),
			( $idterm , '_lng', '$longitude'),
			( $idterm , '_description', '$descricao')";		
			
			

		}
	}else{
		//Caso não exista, insere	
		//1 insere na tabela term
		//2 pega o id da 1 e insere na tabela term_taxonomy event-venue
		$sql_insere_espaco = "
			INSERT INTO ".$wpdb->prefix."terms
			(name, slug, term_group)
			VALUES
			('$nome_espaco','$slug_espaco','0')";
		$insert = $wpdb->query($sql_insere_espaco);

		if($insert == TRUE){
			$ultimo = $wpdb->insert_id;
			$tax = $wpdb->query("INSERT INTO `".$wpdb->prefix."term_taxonomy` (`term_id`, `taxonomy`, `description`) VALUES ('$ultimo', 'event-venue','Espaço');");
			if($tax == TRUE){
				echo "Taxonomia <b>$nome_espaco</b> inserido com sucesso.<br >";	
			}else{
				echo "Erro ao inserir taxonomia <b>$nome_espaco (1)</b><br />";	
			}			
			
			$insert_eo_venuemeta = "INSERT INTO `".$wpdb->prefix."eo_venuemeta` (`eo_venue_id`, `meta_key`, `meta_value`) VALUES
			( $ultimo , '_address', '$address'),
			( $ultimo , '_city', '$city'),
			( $ultimo , '_state', '$state'),
			( $ultimo , '_postcode', '$post_code'),
			( $ultimo , '_country', 'Brasil'),
			( $ultimo , '_lat', '$latitude'),
			( $ultimo , '_lng', '$longitude'),
			( $ultimo, '_description', '$descricao')";
			
			$meta_eo = $wpdb->query($insert_eo_venuemeta);
			if($meta_eo == TRUE){
				echo "Meta Tag EO inserido com sucesso.<br >";	
			}else{
				echo "Erro ao inserir <b>$nome_espaco (2)</b> $insert_eo_venuemeta<br />";	
			}
				
			
			
			
			$mapas = $wpdb->query("INSERT INTO `".$wpdb->prefix."mapas` (`id`, `wp`, `mapas`, `type`,`atualizacao_mapas`) VALUES (NULL, '$ultimo', '$id_mapas', 'space','$date_mapa_update');");
			if($mapas == TRUE){
				echo "Espaço <b>$nome_espaco</b> inserido com sucesso.<br >";	
			}else{
				echo "Erro ao inserir <b>$nome_espaco (2)</b><br />";	
			}
		}else{
			echo "Erro ao inserir <b>$nome_espaco (3)</b> $sql_insere_espaco<br />";	
			
		}
	}

}




if(isset($_POST['projetos'])){

// recupera os projetos
$url = "https://$url_api/api/project/find";
$data = array(
	"owner" => "EQ($agente)",
	"isVerified" => "EQ(TRUE)",
	"@SELECT" => "id,name"
	);
$get_addr = $url."?".http_build_query($data);
$evento = json_decode(jsonMapas($get_addr));

//verifica se o projeto já é uma tag

//se não, insere na tabela termos (wp_terms) e pega o id

// cria a taxonomia event-tag (wp_taxonomia) e pega o id

// insere na tabela wp_mapas (idMapas, id_wp_taxonomia, project)

// cria uma pagina com a tag


}




}




//verifica se o espaço existe




	
?>


<h1>Importador/Atualizador de eventos</h1>
<p><?php if(isset($men)){echo $men;} ?></p>
<p><?php if(isset($resultado)){echo $resultado;} ?></p>
<br /><br />


<h2>Importar/Atualizar eventos e ocorrências</h2>
<p>As ocorrências dos eventos importados dos Mapas Culturais não podem ser editados no plugin "Event Organiser".</p>
<p>Para corrigir ou atualizar datas, é preciso que se atualize corretamente o evento na instalação dos Mapas Culturais e volte a atualizar no botão abaixo.</p>
<p>Eventos excluídos na instalação dos Mapas Culturais não são excluídos automaticamente por este plugin. É preciso apagar no "Event Organiser também".</p>
<br />
<form action="?page=atualizar" method="post">

<link rel="stylesheet" href="http://code.jquery.com/ui/1.9.0/themes/base/jquery-ui.css" />
<script src="http://code.jquery.com/jquery-1.8.2.js"></script>
<script src="http://code.jquery.com/ui/1.9.0/jquery-ui.js"></script>
<script>
$(function() {
    $( ".calendario" ).datepicker({
		dateFormat: 'yy-mm-dd',
		changeMonth: true,
        changeYear: true
		
	});
});
</script>
<p>Atualizar/Importar eventos de 
<input type="text" class="calendario" name="dataInicio" size="10" maxlength="10" value="<?php $hoje = date('Y-m-d'); echo $hoje; ?>">
a <input type="text" class="calendario" name="dataFinal" size="10" maxlength="10" value="<?php echo date('Y-m-d', strtotime("+90 days",strtotime($hoje))) ?>">. (O formato de data é 'Y-m-d')</p> 
<input type="hidden" name="importar" />
<p><input type="submit" value='Importar/Atualizar eventos e ocorrências' /></p>
</form>
<br />
<ln></ln>
<h2>Importar/Atualizar espaços</h2>
<p>Serão importados ou atualizados espaços com o selo indicado na seção "Configurações".</p>
<br />
<form action="?page=atualizar" method="post">
<input type="hidden" name="espacos" />
<p><input type="submit" value='Importar/Atualizar espaços'/></p>
</form>
<br />
<?php //var_dump($existe);	?>

<h2>Importar/Atualizar projetos</h2>

<br />
<form action="?page=atualizar" method="post">
<input type="hidden" name="projetos" />
<p><input type="submit" value='Importar/Atualizar projetos'/></p>
</form>
<?php 
if(isset($_POST['projetos'])){

$url = "https://$url_api/api/project/find";
$data = array(
	"owner" => "EQ($agente)",
	"isVerified" => "EQ(TRUE)",
	"@SELECT" => "id,name,type,event"
	);

$get_addr = $url."?".http_build_query($data);

$evento = json_decode(jsonMapas($get_addr));

//echo "<pre>";
//var_dump($evento);
//echo "</pre>";

}
	
	?>

<h1>Teste Importar com Função EO</h1>
<?php 

$evento_mapas = mapasWp(4338,"mapas","event");
echo '<pre>';
var_dump($evento_mapas);
echo '</pre>';
/*

    $event_data = array(
	     'start'     => new DateTime('2016-12-03 15:00', eo_get_blog_timezone() ),
	     'end'       => new DateTime('2016-12-04 15:00', eo_get_blog_timezone() ),
	     'until'     => new DateTime('2016-12-25 15:00', eo_get_blog_timezone() ),
	     'frequency' => 4,
	     'all_day'   => 0,
	     'schedule'  => 'weekly',
		 'schedule_meta' =>array('SU','SA')
    );
     $post_data = array(
	     'post_title'=>'Teste com categorias, e por semana publicado',
	     'post_content'=>'My event content',
	 	'tax_input'=>array(
			'event-venue'=>array(58),
			'event-category'=>1556,
        'non_hierarchical_tax' => $non_hierarchical_tax,
		),
	'post_status'   => 'publish'
    );

    $e = eo_insert_event($post_data,$event_data);

echo "<pre>";
var_dump($e);
echo "</pre>";

*/
?>